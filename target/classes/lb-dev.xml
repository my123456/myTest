<?xml version="1.0" encoding="UTF-8" ?>
<included>
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
		<filter class="com.lianjia.common.log.LineLogFilter">
			<level>INFO</level>
			<excludes>SELECT 1 FROM DUAL</excludes>
		</filter>
	</appender>
	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="INFO_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>F://storm.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/storm.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>/home/work/var/log/storm/storm.error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/storm.error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="SQL_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="com.lianjia.common.log.LineLogFilter">
			<level>INFO</level>
			<excludes>SELECT 1 FROM DUAL</excludes>
		</filter>
		<file>/home/work/var/log/storm/sql/storm.sql.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/storm/storm.sql.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="SLOW_SQL"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="com.lianjia.common.log.LineLogFilter">
			<level>WARN</level>
			<excludes>SELECT 1 FROM DUAL</excludes>
		</filter>
		<file>/home/work/var/log/storm/slowSql/storm.slowSql.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/slowSql/storm.slowSql.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="DUBBO_INFO_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>/home/work/var/log/storm/dubbo/dubbo.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/dubbo/dubbo.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="DUBBO_ERROR_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>/home/work/var/log/storm/dubbo/dubbo.error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/dubbo/dubbo.error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="BATCH_INFO_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>/home/work/var/log/storm/batch/batch.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/batch/batch.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="BATCH_ERROR_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>/home/work/var/log/storm/batch/batch.error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/batch/batch.error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="MESSAGE_CONSUMER_INFO_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>/home/work/var/log/storm/message/message_consumer.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/message/message_consumer.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="MESSAGE_CONSUMER_ERROR_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>/home/work/var/log/storm/message/message_consumer.error.log
		</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/message/message_consumer.error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="MESSAGE_PRODUCER_INFO_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>/home/work/var/log/storm/message/message_producer.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/message/message_producer.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="MESSAGE_PRODUCER_ERROR_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>/home/work/var/log/storm/message/message_producer.error.log
		</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/message/message_producer.error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="CACHEstorm_INFO_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>/home/work/var/log/storm/cache/cache.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/cache/cache.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<appender name="CACHEstorm_ERROR_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>/home/work/var/log/storm/cache/cache.error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/cache/cache.error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>


	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="HTTP_TO_DUBBO_INFO_LOG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>
		<file>/home/work/var/log/storm/http2dubbo/http2dubbo.info.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>/home/work/var/log/storm/http2dubbo/http2dubbo.info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<layout class="com.lianjia.common.log.RequestIdPatternLayout"></layout>
	</appender>

	<logger name="com.lianjia.iprd.statistics.mq.consumer.queue" additivity="false"
		level="INFO">
		<appender-ref ref="MESSAGE_CONSUMER_INFO_LOG" />
		<appender-ref ref="MESSAGE_CONSUMER_ERROR_LOG" />
	</logger>

	<!-- log4jdbc begin -->
	<!-- 记录系统执行过的sql语句 -->
	<logger name="jdbc.sqlonly" additivity="false" level="OFF">
	</logger>
	<!-- 记录sql执行的时间，可以分析耗时的sql语句 -->
	<logger name="jdbc.sqltiming" additivity="false" level="INFO">
		<appender-ref ref="SQL_FILE" />
		<appender-ref ref="SLOW_SQL" />
		<appender-ref ref="STDOUT" />
	</logger>
	<!-- 记录除了ResultSet外的所有JDBC调用情况 -->
	<logger name="jdbc.audit" additivity="false" level="OFF">
	</logger>
	<!-- 记录返回结果集信息 -->
	<logger name="jdbc.resultset" additivity="false" level="OFF">
	</logger>
	<logger name="jdbc.resultsettable" additivity="false" level="OFF">
		<appender-ref ref="SQL_FILE" />
	</logger>
	<!-- 记录数据库连接和释放信息，可记录当前的数据库连接数，便于诊断连接是否释放 -->
	<logger name="jdbc.connection" additivity="false" level="OFF">
		<appender-ref ref="SQL_FILE" />
	</logger>
	<!-- log4jdbc end -->


	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="INFO_FILE" />
		<appender-ref ref="ERROR_FILE" />
	</root>

</included>